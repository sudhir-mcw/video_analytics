

write_into_file: true


# Writes the userspace buffer into the file every 2.5 seconds.
file_write_period_ms: 2500

# Commits the trace from the shared memory buffer to the central buffer
# periodically. Otherwise, the --full-sort option will be required for
# trace_processor_shell and traceconv when importing the trace.
flush_period_ms: 20000

# The trace buffers needs to be big enough to hold |file_write_period_ms| of
# trace data. The trace buffer sizing depends on the number of trace categories
# enabled and the device activity. A good rule of thumb is ~10-20 MB per second,
# so if |file_write_period_ms| ~ 3s -> 30 MB.
buffers {
  size_kb: 32768
  fill_policy: RING_BUFFER
}

buffers {
  size_kb: 32768
  fill_policy: RING_BUFFER
}

data_sources: {
    config {
        name: "linux.process_stats"
        target_buffer: 0
        process_stats_config {
            scan_all_processes_on_start: true
        }
    }
}
data_sources: {
    config {
        name: "linux.sys_stats"
        target_buffer: 0
        sys_stats_config {
            stat_period_ms: 1000
            stat_counters: STAT_CPU_TIMES
            stat_counters: STAT_FORK_COUNT
        }
    }
}
data_sources: {
    config {
        name: "linux.ftrace"
        target_buffer: 1
        ftrace_config {
            ftrace_events: "sched/sched_switch"
            ftrace_events: "power/suspend_resume"
            ftrace_events: "sched/sched_wakeup"
            ftrace_events: "sched/sched_wakeup_new"
            ftrace_events: "sched/sched_waking"
            ftrace_events: "power/cpu_frequency"
            ftrace_events: "power/cpu_idle"
            ftrace_events: "sched/sched_process_exit"
            ftrace_events: "sched/sched_process_free"
            ftrace_events: "task/task_newtask"
            ftrace_events: "task/task_rename"
        }
    }
}
data_sources: {
    config {
        name: "track_event"
        target_buffer: 0
    }
}
duration_ms: 30000
